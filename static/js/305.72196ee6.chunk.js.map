{"version":3,"file":"static/js/305.72196ee6.chunk.js","mappings":"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","sources":["api/api.js","pages/MovieDetailsPage.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'api_key=1aace2915168deda27118d05bacd9bed';\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`/trending/movie/day?${API_KEY}`);\n  return response.data;\n};\n\nexport const searchMoviesByKeyword = async query => {\n  const response = await axios.get(\n    `/search/movie?${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}?${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchMovieCredits = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n","import { useEffect, useState } from 'react';\nimport { useParams, useLocation, Link } from 'react-router-dom';\nimport { fetchMovieDetails } from '../api/api';\n\nconst MoviesDetails = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const [moviesDetails, setMoviesDetails] = useState({});\n  const buttonBack = location.state?.from ?? '/';\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const details = await fetchMovieDetails(movieId);\n        setMoviesDetails(details);\n      } catch (error) {\n        console.error('Error fetching movie details:', error.message);\n      }\n    };\n\n    fetchData();\n  }, [movieId]);\n\n  const { poster_path, title, genres, overview, vote_average, release_date } =\n    moviesDetails;\n\n  return (\n    <>\n      <Link to={buttonBack}>Go Back</Link>\n      <div>\n        <div>\n          <img\n            src={\n              poster_path ? `https://image.tmdb.org/t/p/w300${poster_path}` : ''\n            }\n            alt={title}\n          />\n        </div>\n        <div>\n          {title && (\n            <h2>\n              {title} {release_date?.substr(0, 4)}\n            </h2>\n          )}\n\n          <p>User Score: {vote_average && Math.floor(vote_average * 10)}%</p>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n          <h2>Genres</h2>\n          {genres && <p>{genres.map(({ name }) => name).join(', ')}</p>}\n        </div>\n      </div>\n\n      <div>\n        <h3>Additional information</h3>\n        <ul>\n          <li>\n            <Link to={`${movieId}/cast`}>Cast</Link>\n          </li>\n          <li>\n            <Link to={`${movieId}/reviews`}>Reviews</Link>\n          </li>\n        </ul>\n      </div>\n    </>\n  );\n};\n\nexport default MoviesDetails;\n"],"names":["axios","API_KEY","fetchTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","concat","sent","abrupt","data","stop","apply","arguments","searchMoviesByKeyword","_ref2","_callee2","query","_context2","_x","fetchMovieDetails","_ref3","_callee3","movieId","_context3","_x2","fetchMovieCredits","_ref4","_callee4","_context4","_x3","fetchMovieReviews","_ref5","_callee5","_context5","_x4","_location$state$from","_location$state","useParams","location","useLocation","_useState","useState","_useState2","_slicedToArray","moviesDetails","setMoviesDetails","buttonBack","state","from","useEffect","fetchData","details","t0","console","error","message","poster_path","title","genres","overview","vote_average","release_date","_jsxs","_Fragment","children","_jsx","Link","to","src","alt","substr","Math","floor","map","name","join"],"sourceRoot":""}