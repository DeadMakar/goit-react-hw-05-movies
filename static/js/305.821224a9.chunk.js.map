{"version":3,"file":"static/js/305.821224a9.chunk.js","mappings":"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","sources":["api/api.js","pages/MovieDetailsPage.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'api_key=1aace2915168deda27118d05bacd9bed';\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`/trending/movie/day?${API_KEY}`);\n  return response.data;\n};\n\nexport const searchMoviesByKeyword = async query => {\n  const response = await axios.get(\n    `/search/movie?${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}?${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchMovieCredits = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?${API_KEY}&language=en-US`\n  );\n  return response.data.results;\n};\n","import { useEffect, useState } from 'react';\nimport { useParams, useLocation, Link, Outlet } from 'react-router-dom';\nimport { fetchMovieDetails } from '../api/api';\nimport styled from 'styled-components';\n\nconst DetailsContainer = styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 20px;\n`;\n\nconst BackLink = styled(Link)`\n  display: block;\n  margin-bottom: 20px;\n  text-decoration: none;\n  color: #3498db;\n  font-size: 18px;\n`;\n\nconst MovieImage = styled.img`\n  max-width: 100%;\n  height: auto;\n`;\n\nconst MovieTitle = styled.h2`\n  margin: 10px 0;\n`;\n\nconst Score = styled.p`\n  margin: 5px 0;\n`;\n\nconst Overview = styled.p`\n  margin: 10px 0;\n`;\n\nconst Genres = styled.p`\n  margin: 10px 0;\n`;\n\nconst AdditionalInfo = styled.div`\n  margin-top: 20px;\n`;\n\nconst InfoHeading = styled.h3`\n  margin-bottom: 10px;\n`;\n\nconst InfoList = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 0;\n`;\n\nconst InfoItem = styled.li`\n  margin-bottom: 5px;\n`;\n\nconst MoviesDetails = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const [moviesDetails, setMoviesDetails] = useState({});\n  const buttonBack = location.state?.from ?? '/';\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const details = await fetchMovieDetails(movieId);\n        setMoviesDetails(details);\n      } catch (error) {\n        console.error('Error fetching movie details:', error.message);\n      }\n    };\n\n    fetchData();\n  }, [movieId]);\n\n  const { poster_path, title, genres, overview, vote_average, release_date } =\n    moviesDetails;\n\n  return (\n    <DetailsContainer>\n      <BackLink to={buttonBack}>Go Back</BackLink>\n      <div>\n        <div>\n          <MovieImage\n            src={\n              poster_path ? `https://image.tmdb.org/t/p/w300${poster_path}` : ''\n            }\n            alt={title}\n          />\n        </div>\n        <div>\n          {title && (\n            <MovieTitle>\n              {title} {release_date?.substr(0, 4)}\n            </MovieTitle>\n          )}\n\n          <Score>\n            User Score: {vote_average && Math.floor(vote_average * 10)}%\n          </Score>\n          <Overview>\n            <h2>Overview</h2>\n            <p>{overview}</p>\n          </Overview>\n          <Genres>\n            <h2>Genres</h2>\n            {genres && <p>{genres.map(({ name }) => name).join(', ')}</p>}\n          </Genres>\n        </div>\n      </div>\n\n      <AdditionalInfo>\n        <InfoHeading>Additional information</InfoHeading>\n        <InfoList>\n          <InfoItem>\n            <Link to={`cast`}>Cast</Link>\n          </InfoItem>\n          <InfoItem>\n            <Link to={`reviews`}>Reviews</Link>\n          </InfoItem>\n        </InfoList>\n      </AdditionalInfo>\n      <Outlet />\n    </DetailsContainer>\n  );\n};\n\nexport default MoviesDetails;\n"],"names":["axios","API_KEY","fetchTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","concat","sent","abrupt","data","stop","apply","arguments","searchMoviesByKeyword","_ref2","_callee2","query","_context2","_x","fetchMovieDetails","_ref3","_callee3","movieId","_context3","_x2","fetchMovieCredits","_ref4","_callee4","_context4","cast","_x3","fetchMovieReviews","_ref5","_callee5","_context5","results","_x4","DetailsContainer","styled","_templateObject","_taggedTemplateLiteral","BackLink","Link","_templateObject2","MovieImage","_templateObject3","MovieTitle","_templateObject4","Score","_templateObject5","Overview","_templateObject6","Genres","_templateObject7","AdditionalInfo","_templateObject8","InfoHeading","_templateObject9","InfoList","_templateObject10","InfoItem","_templateObject11","_location$state$from","_location$state","useParams","location","useLocation","_useState","useState","_useState2","_slicedToArray","moviesDetails","setMoviesDetails","buttonBack","state","from","useEffect","fetchData","details","t0","console","error","message","poster_path","title","genres","overview","vote_average","release_date","_jsxs","children","_jsx","to","src","alt","substr","Math","floor","map","name","join","Outlet"],"sourceRoot":""}