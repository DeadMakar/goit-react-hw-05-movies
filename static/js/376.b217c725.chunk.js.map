{"version":3,"file":"static/js/376.b217c725.chunk.js","mappings":"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","sources":["api/api.js","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.js","components/SearchBar/SearchBar.styled.js","components/SearchBar/SearchBar.js","pages/MoviesPage.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'api_key=1aace2915168deda27118d05bacd9bed';\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`/trending/movie/day?${API_KEY}`);\n  return response.data;\n};\n\nexport const searchMoviesByKeyword = async query => {\n  const response = await axios.get(\n    `/search/movie?${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}?${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchMovieCredits = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?${API_KEY}&language=en-US`\n  );\n  return response.data.results;\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  padding: 0;\n  margin: 0;\n`;\n\nexport const Li = styled.li`\n  list-style: none;\n  padding: 15px;\n  margin: 0;\n`;\n\nexport const Card = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n  text-align: center;\n  width: 200px;\n  height: 355px;\n\n  :hover {\n    scale: 1.1;\n  }\n`;\n\nexport const Img = styled.img`\n  width: 250px;\n`;\n","import { useLocation } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport { List, Li, Card, Img } from './MovieList.styled';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <>\n      <List>\n        {movies.map(({ id, title, name, poster_path }) => {\n          return (\n            <Li key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                <Card>\n                  {poster_path && (\n                    <Img\n                      src={`https://image.tmdb.org/t/p/w200${poster_path}`}\n                      alt={title ?? name}\n                    />\n                  )}\n                  {title ?? name}\n                </Card>\n              </Link>\n            </Li>\n          );\n        })}\n      </List>\n    </>\n  );\n};\n\nexport default MovieList;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  margin-bottom: 20px;\n`;\n\nexport const Input = styled.input`\n  flex: 1;\n  padding: 10px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  margin-right: 10px;\n`;\n\nexport const Button = styled.button`\n  padding: 10px 20px;\n  background-color: #007bff;\n  color: #fff;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n`;\n","import { useState } from 'react';\nimport { Button, Form, Input } from './SearchBar.styled';\n\nconst SearchBar = ({ handleSearch }) => {\n  const [query, setQuery] = useState('');\n\n  const onChange = ({ target }) => setQuery(target.value);\n  const onSubmit = event => {\n    event.preventDefault();\n\n    if (query.trim() === '') {\n      alert('Enter the title of the movie');\n      return;\n    }\n    handleSearch(query.trim());\n    setQuery('');\n  };\n\n  return (\n    <Form onSubmit={onSubmit}>\n      <Input\n        type=\"text\"\n        name=\"searchQuery\"\n        value={query}\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search for a movie...\"\n        onChange={onChange}\n      />\n      <Button>Search</Button>\n    </Form>\n  );\n};\n\nexport default SearchBar;\n","import { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport SearchBar from '../components/SearchBar/SearchBar';\nimport MovieList from '../components/MovieList/MovieList';\nimport Loader from 'components/Loader/Loader';\nimport { useSearchParams } from 'react-router-dom';\nimport { searchMoviesByKeyword } from 'api/api';\n\nconst StyledMoviesPage = styled.div`\n  text-align: center;\n  padding-top: 20px;\n  padding-bottom: 20px;\n\n  h1 {\n    margin-bottom: 20px;\n  }\n\n  p {\n    color: red;\n  }\n`;\n\nconst MoviesPage = () => {\n  const [params, setParams] = useSearchParams({ query: '' });\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const moviesName = params.get('query');\n\n  const handleSearch = query => {\n    setParams({ query: query || '' });\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n\n      try {\n        const response = await searchMoviesByKeyword(moviesName);\n        if (!isMounted) return;\n\n        setMovies(response.results);\n      } catch (err) {\n        if (!isMounted) return;\n\n        setError(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    let isMounted = true;\n\n    if (moviesName) {\n      fetchData();\n    }\n\n    return () => {\n      isMounted = false;\n    };\n  }, [moviesName]);\n\n  return (\n    <StyledMoviesPage>\n      <h1>Movies Search</h1>\n      <SearchBar handleSearch={handleSearch} />\n      {loading && <Loader />}\n      {error && <p>Error: {error.message}</p>}\n      {movies.length === 0 && <p>No movies found.</p>}\n      {movies.length > 0 && <MovieList movies={movies} />}\n    </StyledMoviesPage>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["axios","API_KEY","fetchTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","concat","sent","abrupt","data","stop","apply","arguments","searchMoviesByKeyword","_ref2","_callee2","query","_context2","_x","fetchMovieDetails","_ref3","_callee3","movieId","_context3","_x2","fetchMovieCredits","_ref4","_callee4","_context4","cast","_x3","fetchMovieReviews","_ref5","_callee5","_context5","results","_x4","List","styled","_templateObject","_taggedTemplateLiteral","Li","_templateObject2","Card","_templateObject3","Img","_templateObject4","movies","location","useLocation","_jsx","_Fragment","children","map","id","title","name","poster_path","Link","to","state","from","_jsxs","src","alt","Form","Input","Button","handleSearch","_useState","useState","_useState2","_slicedToArray","setQuery","onSubmit","event","preventDefault","trim","alert","type","value","autoComplete","autoFocus","placeholder","onChange","target","StyledMoviesPage","_useSearchParams","useSearchParams","_useSearchParams2","params","setParams","setMovies","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","moviesName","get","useEffect","fetchData","isMounted","t0","finish","SearchBar","Loader","message","length","MovieList"],"sourceRoot":""}