{"version":3,"file":"static/js/541.d2f996b6.chunk.js","mappings":"mTAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,2CAEHC,EAAmB,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACVV,EAAAA,EAAAA,IAAU,uBAADW,OAAwBV,IAAW,KAAD,EAApD,OAARM,EAAQC,EAAAI,KAAAJ,EAAAK,OAAA,SACPN,EAASO,MAAI,wBAAAN,EAAAO,OAAA,GAAAT,EAAA,KACrB,kBAH+B,OAAAH,EAAAa,MAAA,KAAAC,UAAA,KAKnBC,EAAqB,eAAAC,GAAAf,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAe,EAAMC,GAAK,IAAAd,EAAA,OAAAF,IAAAA,MAAA,SAAAiB,GAAA,cAAAA,EAAAb,KAAAa,EAAAZ,MAAA,cAAAY,EAAAZ,KAAA,EACvBV,EAAAA,EAAAA,IAAU,iBAADW,OACbV,EAAO,0BAAAU,OAAyBU,EAAK,gCACtD,KAAD,EAFa,OAARd,EAAQe,EAAAV,KAAAU,EAAAT,OAAA,SAGPN,EAASO,MAAI,wBAAAQ,EAAAP,OAAA,GAAAK,EAAA,KACrB,gBALiCG,GAAA,OAAAJ,EAAAH,MAAA,KAAAC,UAAA,KAOrBO,EAAiB,eAAAC,GAAArB,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAqB,EAAMC,GAAO,IAAApB,EAAA,OAAAF,IAAAA,MAAA,SAAAuB,GAAA,cAAAA,EAAAnB,KAAAmB,EAAAlB,MAAA,cAAAkB,EAAAlB,KAAA,EACrBV,EAAAA,EAAAA,IAAU,UAADW,OACpBgB,EAAO,KAAAhB,OAAIV,EAAO,oBAC5B,KAAD,EAFa,OAARM,EAAQqB,EAAAhB,KAAAgB,EAAAf,OAAA,SAGPN,EAASO,MAAI,wBAAAc,EAAAb,OAAA,GAAAW,EAAA,KACrB,gBAL6BG,GAAA,OAAAJ,EAAAT,MAAA,KAAAC,UAAA,KAOjBa,EAAiB,eAAAC,GAAA3B,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAA2B,EAAML,GAAO,IAAApB,EAAA,OAAAF,IAAAA,MAAA,SAAA4B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,cAAAuB,EAAAvB,KAAA,EACrBV,EAAAA,EAAAA,IAAU,UAADW,OACpBgB,EAAO,aAAAhB,OAAYV,EAAO,oBACpC,KAAD,EAFa,OAARM,EAAQ0B,EAAArB,KAAAqB,EAAApB,OAAA,SAGPN,EAASO,KAAKoB,MAAI,wBAAAD,EAAAlB,OAAA,GAAAiB,EAAA,KAC1B,gBAL6BG,GAAA,OAAAJ,EAAAf,MAAA,KAAAC,UAAA,KAOjBmB,EAAiB,eAAAC,GAAAjC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAiC,EAAMX,GAAO,IAAApB,EAAA,OAAAF,IAAAA,MAAA,SAAAkC,GAAA,cAAAA,EAAA9B,KAAA8B,EAAA7B,MAAA,cAAA6B,EAAA7B,KAAA,EACrBV,EAAAA,EAAAA,IAAU,UAADW,OACpBgB,EAAO,aAAAhB,OAAYV,EAAO,oBACpC,KAAD,EAFa,OAARM,EAAQgC,EAAA3B,KAAA2B,EAAA1B,OAAA,SAGPN,EAASO,KAAK0B,SAAO,wBAAAD,EAAAxB,OAAA,GAAAuB,EAAA,KAC7B,gBAL6BG,GAAA,OAAAJ,EAAArB,MAAA,KAAAC,UAAA,I,gHCiC9B,UAzDa,WACX,IAAMyB,GAASC,EAAAA,EAAAA,MACfC,GAA0BC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlCI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,GAA8BL,EAAAA,EAAAA,UAAS,MAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAArCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,GAA4BT,EAAAA,EAAAA,WAAS,GAAMU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAApCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAqBxB,OAnBAG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,eAAAxD,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAsD,EAAA,OAAAvD,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAGH,OAHGF,EAAAC,KAAA,EAEnBgD,GAAU,GACVR,GAAS,GAAOzC,EAAAE,KAAA,GAEKoB,EAAAA,EAAAA,IAAkBY,EAAOf,SAAS,KAAD,EAAhDiC,EAAMpD,EAAAI,KACZyC,EAAWO,GAAQpD,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAqD,GAAArD,EAAA,SAEnBsD,QAAQd,MAAKxC,EAAAqD,IACbZ,GAAS,GAAM,QAEE,OAFFzC,EAAAC,KAAA,GAEfgD,GAAU,GAAOjD,EAAAuD,OAAA,6BAAAvD,EAAAO,OAAA,GAAAT,EAAA,wBAEpB,kBAbmB,OAAAH,EAAAa,MAAA,KAAAC,UAAA,KAepB0C,GACF,GAAG,CAACjB,EAAOf,WAGTqC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,CACGV,IAAUW,EAAAA,EAAAA,KAAA,KAAAD,SAAG,eACblB,IAASmB,EAAAA,EAAAA,KAAA,KAAAD,SAAG,+BACZd,IACCe,EAAAA,EAAAA,KAAA,MAAAD,SACGd,EAAQgB,OAAS,GAChBD,EAAAA,EAAAA,KAAA,KAAAD,SAAG,oCAEHd,EAAQiB,KACN,SAAAlD,GAAA,IAAGmD,EAASnD,EAATmD,UAAWC,EAAEpD,EAAFoD,GAAIC,EAAIrD,EAAJqD,KAAMC,EAAYtD,EAAZsD,aAAcC,EAAavD,EAAbuD,cAAa,OACjDV,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,OACEQ,IACEF,EAAY,mCAAA9D,OAC2B8D,GA1C3D,8EA6CkBG,IAAKF,KAEPV,EAAAA,EAAAA,MAAA,MAAAE,SAAA,CAAI,UAAQM,MACZR,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,SAAOI,OAVHC,EAWJ,QAQrB,C","sources":["api/api.js","components/Cast/Cast.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'api_key=1aace2915168deda27118d05bacd9bed';\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`/trending/movie/day?${API_KEY}`);\n  return response.data;\n};\n\nexport const searchMoviesByKeyword = async query => {\n  const response = await axios.get(\n    `/search/movie?${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}?${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchMovieCredits = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?${API_KEY}&language=en-US`\n  );\n  return response.data.results;\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCredits } from '../../api/api';\n\nconst defaultImg =\n  'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\nconst Cast = () => {\n  const params = useParams();\n  const [error, setError] = useState(false);\n  const [authors, setAuthors] = useState(null);\n  const [loader, setLoader] = useState(false);\n\n  useEffect(() => {\n    const fetchMovieCast = async () => {\n      try {\n        setLoader(true);\n        setError(false);\n\n        const result = await fetchMovieCredits(params.movieId);\n        setAuthors(result);\n      } catch (error) {\n        console.error(error);\n        setError(true);\n      } finally {\n        setLoader(false);\n      }\n    };\n\n    fetchMovieCast();\n  }, [params.movieId]);\n\n  return (\n    <>\n      {loader && <p>Loading...</p>}\n      {error && <p>Error loading cast details</p>}\n      {authors && (\n        <ul>\n          {authors.length < 1 ? (\n            <p>Sorry, no description available</p>\n          ) : (\n            authors.map(\n              ({ character, id, name, profile_path, original_name }) => (\n                <li key={id}>\n                  <img\n                    src={\n                      profile_path\n                        ? `https://image.tmdb.org/t/p/w185/${profile_path}`\n                        : defaultImg\n                    }\n                    alt={original_name}\n                  />\n                  <h3>Actor: {name}</h3>\n                  <p>Role: {character}</p>\n                </li>\n              )\n            )\n          )}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n"],"names":["axios","API_KEY","fetchTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","concat","sent","abrupt","data","stop","apply","arguments","searchMoviesByKeyword","_ref2","_callee2","query","_context2","_x","fetchMovieDetails","_ref3","_callee3","movieId","_context3","_x2","fetchMovieCredits","_ref4","_callee4","_context4","cast","_x3","fetchMovieReviews","_ref5","_callee5","_context5","results","_x4","params","useParams","_useState","useState","_useState2","_slicedToArray","error","setError","_useState3","_useState4","authors","setAuthors","_useState5","_useState6","loader","setLoader","useEffect","fetchMovieCast","result","t0","console","finish","_jsxs","_Fragment","children","_jsx","length","map","character","id","name","profile_path","original_name","src","alt"],"sourceRoot":""}