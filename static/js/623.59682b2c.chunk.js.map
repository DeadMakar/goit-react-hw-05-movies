{"version":3,"file":"static/js/623.59682b2c.chunk.js","mappings":"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","sources":["api/api.js","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.js","components/SearchBar/SearchBar.js","pages/MoviesPage.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'api_key=1aace2915168deda27118d05bacd9bed';\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`/trending/movie/day?${API_KEY}`);\n  return response.data;\n};\n\nexport const searchMoviesByKeyword = async query => {\n  const response = await axios.get(\n    `/search/movie?${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}?${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchMovieCredits = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  padding: 0;\n  margin: 0;\n`;\n\nexport const Li = styled.li`\n  list-style: none;\n  padding: 15px;\n  margin: 0;\n`;\n\nexport const Card = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n  text-align: center;\n  width: 200px;\n  height: 355px;\n\n  :hover {\n    scale: 1.1;\n  }\n`;\n\nexport const Img = styled.img`\n  width: 250px;\n`;\n","import { useLocation } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport { List, Li, Card, Img } from './MovieList.styled';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <>\n      <List>\n        {movies.map(({ id, title, name, poster_path }) => {\n          return (\n            <Li key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                <Card>\n                  {poster_path && (\n                    <Img\n                      src={`https://image.tmdb.org/t/p/w200${poster_path}`}\n                      alt={title ?? name}\n                    />\n                  )}\n                  {title ?? name}\n                </Card>\n              </Link>\n            </Li>\n          );\n        })}\n      </List>\n    </>\n  );\n};\n\nexport default MovieList;\n","import { useState } from 'react';\n\nconst SearchBar = ({ handleSearch }) => {\n  const [query, setQuery] = useState('');\n\n  const onChange = ({ target }) => setQuery(target.value);\n  const onSubmit = event => {\n    event.preventDefault();\n\n    if (query.trim() === '') {\n      alert('Enter the title of the movie');\n      return;\n    }\n    handleSearch(query.trim());\n    setQuery('');\n  };\n\n  return (\n    <form onSubmit={onSubmit}>\n      <input\n        type=\"text\"\n        name=\"searchQuery\"\n        value={query}\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search for a movie...\"\n        onChange={onChange}\n      />\n      <button>\n        <span>Search</span>\n      </button>\n    </form>\n  );\n};\n\nexport default SearchBar;\n","import { useState, useEffect } from 'react';\nimport SearchBar from '../components/SearchBar/SearchBar';\nimport MovieList from '../components/MovieList/MovieList';\nimport Loader from 'components/Loader/Loader';\nimport { useSearchParams } from 'react-router-dom';\nimport { searchMoviesByKeyword } from 'api/api';\n\nconst MoviesPage = () => {\n  const [params, setParams] = useSearchParams({ query: '' });\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const moviesName = params.get('query');\n\n  const handleSearch = query => {\n    setParams({ query: query || '' });\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n\n      try {\n        const response = await searchMoviesByKeyword(moviesName);\n        if (!isMounted) return;\n\n        setMovies(response.results);\n      } catch (error) {\n        if (!isMounted) return;\n\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    let isMounted = true;\n\n    if (moviesName) {\n      fetchData();\n    }\n\n    return () => {\n      isMounted = false;\n    };\n  }, [moviesName]);\n\n  return (\n    <>\n      <h1\n        style={{\n          textAlign: 'center',\n          paddingTop: '20px',\n          paddingBottom: '20px',\n        }}\n      >\n        Movies Search\n      </h1>\n      <SearchBar handleSearch={handleSearch} />\n      {loading && <Loader />}\n      {error && <p style={{ color: 'red' }}>Error: {error.message}</p>}\n      {movies.length === 0 && <p>No movies found.</p>}\n      {movies.length > 0 && <MovieList movies={movies} />}\n    </>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["axios","API_KEY","fetchTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","concat","sent","abrupt","data","stop","apply","arguments","searchMoviesByKeyword","_ref2","_callee2","query","_context2","_x","fetchMovieDetails","_ref3","_callee3","movieId","_context3","_x2","fetchMovieCredits","_ref4","_callee4","_context4","_x3","fetchMovieReviews","_ref5","_callee5","_context5","_x4","List","styled","_templateObject","_taggedTemplateLiteral","Li","_templateObject2","Card","_templateObject3","Img","_templateObject4","movies","location","useLocation","_jsx","_Fragment","children","map","id","title","name","poster_path","Link","to","state","from","_jsxs","src","alt","handleSearch","_useState","useState","_useState2","_slicedToArray","setQuery","onSubmit","event","preventDefault","trim","alert","type","value","autoComplete","autoFocus","placeholder","onChange","target","_useSearchParams","useSearchParams","_useSearchParams2","params","setParams","setMovies","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","moviesName","get","useEffect","fetchData","isMounted","results","t0","finish","style","textAlign","paddingTop","paddingBottom","SearchBar","Loader","color","message","length","MovieList"],"sourceRoot":""}